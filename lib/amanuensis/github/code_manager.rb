module Amanuensis
  module Github
    class CodeManager

      def latest_release
        hash       = client.latest_release(Github.repo)
        created_at = hash.created_at rescue Date.new(1900)

        Release.new hash.created_at, hash.tag_name
      end

      def create_release(version)
        client.create_release(Github.repo, version, {
          body:       "Release generated by amanuensis.",
          draft:      false,
          prerelease: false
        })
      end

      def pulls(from)
        filter(closed_pulls, from).map do |pull|
          Pull.new pull['number'], pull['html_url'], pull['title']
        end
      end

      private

      def filter(list, from)
        list.select { |object| object.closed_at > from.to_time }
      end

      def closed_pulls
        client.pull_requests(Github.repo, state: 'closed')
      end

      def client
        @client ||= Octokit::Client.new(access_token: Github.oauth_token, auto_paginate: true)
      end

    end
  end
end
